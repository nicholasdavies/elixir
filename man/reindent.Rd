% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reindent.R
\name{reindent}
\alias{reindent}
\title{Reindent some lines of code}
\usage{
elixir:::reindent(lines, rules, tab = "    ", start = 0L)
}
\arguments{
\item{lines}{Character vector with lines of text; can have internal
newlines.}

\item{rules}{Which \link[=elixir-rules]{rules} to follow. You can pass a string
from among \code{"C"}, \code{"C++"}, \code{"Lua"}, or \code{"R"}, or a list with elements:
\itemize{
\item \code{indent_more} Character vector of tokens which increase the indent level.
\item \code{indent_less} Character vector of tokens which decrease the indent level.
\item \code{indent_both} Character vector of tokens which decrease, then increase the
indent level (see Details).
\item \code{ignore} Comment and string literal delimiters (see Details).
}}

\item{tab}{Character string; what to use as an indent.}

\item{start}{Indent level to start at.}
}
\value{
Reindented lines as a character vector.
}
\description{
Using some fairly unsophisticated metrics, \code{\link[=reindent]{reindent()}} will take some lines
of code and, according to its understanding of the rules for that language,
reindent those lines. This is intended to help prettify automatically
generated code.

This function is experimental and is not exported; it can be invoked using
\code{elixir:::reindent}.
}
\details{
Conceptually, the function first ignores any comments or string literals.
Then, line by line, \code{reindent} looks for tokens that signal either an
increase in the indent level, a decrease in the indent level, or both at
the same time. For example, in this Lua code:

\if{html}{\out{<div class="sourceCode">}}\preformatted{if x == 1 then
    print 'one'
else
    print 'not one'
end
}\if{html}{\out{</div>}}

the \verb{else} keyword both decreases and increases the indent level.

Some unusual character sequences may break \code{\link[=reindent]{reindent()}}.
}
\examples{
elixir:::reindent(
    c(
        "if x == 1 then",
        "print 'one'",
        "else",
        "print 'not one'",
        "end"
    ),
    rules = "Lua")
}
